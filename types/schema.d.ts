/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/authors": {
    /** Get all authors */
    get: operations["getGhostApiContentAuthors"];
  };
  "/authors/{id}": {
    /** Get authors by id */
    get: operations["getGhostApiContentAuthors1"];
  };
  "/authors/slug/{slug}": {
    /** Get authors by slug */
    get: operations["getGhostApiContentAuthorsSlugJamie"];
  };
  "/pages": {
    /** Get all pages */
    get: operations["getGhostApiContentPages"];
  };
  "/pages/{id}": {
    /** Get pages by id */
    get: operations["getGhostApiContentPages65007Ce1B6F82000019271De"];
  };
  "/pages/slug/{slug}": {
    /** Get pages by slug */
    get: operations["getGhostApiContentPagesSlugFavoritePaintings"];
  };
  "/posts": {
    /** Get all posts */
    get: operations["getGhostApiContentPosts"];
  };
  "/posts/{id}": {
    /** Get posts by id */
    get: operations["getGhostApiContentPosts65007Dbeb6F82000019271Fa"];
  };
  "/posts/slug/{slug}": {
    /** Get posts by slug */
    get: operations["getGhostApiContentPostsSlugLock"];
  };
  "/settings": {
    /** Get all settings */
    get: operations["getGhostApiContentSettings"];
  };
  "/tags": {
    /** Get all tags */
    get: operations["getGhostApiContentTags"];
  };
  "/tags/{id}": {
    /** Get tags by id */
    get: operations["getGhostApiContentTags65007F03B6F8200001927220"];
  };
  "/tags/slug/{slug}": {
    /** Get tags by slug */
    get: operations["getGhostApiContentTagsSlugPainting"];
  };
  "/tiers": {
    /** Get all tiers */
    get: operations["getGhostApiContentTiers"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** ghostError (403) */
    403: {
      errors?: ({
          code?: string | null;
          context?: string;
          details?: string | null;
          ghostErrorCode?: string | null;
          help?: string | null;
          /** Format: uuid */
          id?: string;
          message?: string;
          property?: string | null;
          type?: string;
        })[];
    };
    /** ghostError (404) */
    404: {
      errors?: ({
          code?: string | null;
          context?: string | null;
          details?: string | null;
          ghostErrorCode?: string | null;
          help?: string | null;
          /** Format: uuid */
          id?: string;
          message?: string;
          property?: string | null;
          type?: string;
        })[];
    };
    /** ghostError (422) */
    422: {
      errors?: ({
          code?: string | null;
          context?: string;
          details?: string | null;
          ghostErrorCode?: string | null;
          help?: string | null;
          /** Format: uuid */
          id?: string;
          message?: string;
          property?: string | null;
          type?: string;
        })[];
    };
    /** Author */
    authors: {
      bio?: string | null;
      /** Count */
      count?: {
        posts?: number;
      };
      cover_image?: string | null;
      facebook?: string | null;
      /** Format: integer */
      id?: string;
      location?: string | null;
      meta_description?: string | null;
      meta_title?: string | null;
      name?: string;
      profile_image?: string | null;
      slug?: string;
      twitter?: string | null;
      /** Format: uri */
      url?: string;
      website?: string | null;
    };
    meta: {
      /** Pagination */
      pagination?: {
        limit?: number;
        next?: number | null;
        page?: number;
        pages?: number;
        prev?: number | null;
        total?: number;
      };
    };
    /** Tag */
    tags: {
      accent_color?: string | null;
      /** Format: uri-reference */
      canonical_url?: string | null;
      codeinjection_foot?: string | null;
      codeinjection_head?: string | null;
      /** Count */
      count?: {
        posts?: number;
      };
      description?: string | null;
      /** Format: uri-reference */
      feature_image?: string | null;
      id?: string;
      meta_description?: string | null;
      meta_title?: string | null;
      name?: string;
      og_description?: string | null;
      /** Format: uri-reference */
      og_image?: string | null;
      og_title?: string | null;
      slug?: string | null;
      twitter_description?: string | null;
      /** Format: uri-reference */
      twitter_image?: string | null;
      twitter_title?: string | null;
      /** Format: uri */
      url?: string;
      /** @enum {string} */
      visibility?: "public" | "internal";
    };
    /** Tier */
    tiers: {
      active?: boolean;
      benefits?: string[] | null;
      /** Format: date-time */
      created_at?: string;
      currency?: string | null;
      description?: string | null;
      id?: string;
      monthly_price?: number | null;
      name?: string;
      slug?: string | null;
      trial_days?: number | null;
      type?: string;
      /** Format: date-time */
      updated_at?: string;
      /** @enum {string} */
      visibility?: "public" | "none";
      welcome_page_url?: string | null;
      yearly_price?: number | null;
    };
    /** Page */
    pages: {
      access?: boolean;
      authors?: components["schemas"]["authors"][];
      /** Format: uri-reference */
      canonical_url?: string | null;
      codeinjection_foot?: string | null;
      codeinjection_head?: string | null;
      comment_id?: string;
      comments?: boolean;
      /** Format: date-time */
      created_at?: string;
      custom_excerpt?: string | null;
      custom_template?: string | null;
      excerpt?: string;
      /** Format: uri-reference */
      feature_image?: string | null;
      feature_image_alt?: string | null;
      feature_image_caption?: string | null;
      featured?: boolean;
      frontmatter?: string | null;
      html?: string | null;
      id?: string;
      meta_description?: string | null;
      meta_title?: string | null;
      og_description?: string | null;
      /** Format: uri-reference */
      og_image?: string | null;
      og_title?: string | null;
      plaintext?: string;
      primary_author?: unknown;
      primary_tag?: unknown;
      /** Format: date-time */
      published_at?: string | null;
      reading_time?: number;
      show_title_and_feature_image?: boolean;
      slug?: string;
      tags?: components["schemas"]["tags"][];
      title?: string;
      twitter_description?: string | null;
      /** Format: uri-reference */
      twitter_image?: string | null;
      twitter_title?: string | null;
      /** Format: date-time */
      updated_at?: string | null;
      /** Format: uri */
      url?: string;
      /** Format: uuid */
      uuid?: string;
      visibility?: string | null;
      tiers?: components["schemas"]["tiers"][];
    };
    /** Post */
    posts: {
      access?: boolean;
      authors?: components["schemas"]["authors"][];
      /** Format: uri-reference */
      canonical_url?: string | null;
      codeinjection_foot?: string | null;
      codeinjection_head?: string | null;
      comment_id?: string;
      comments?: boolean;
      /** Format: date-time */
      created_at?: string;
      custom_excerpt?: string | null;
      custom_template?: string | null;
      email_subject?: string | null;
      excerpt?: string;
      /** Format: uri-reference */
      feature_image?: string | null;
      feature_image_alt?: string | null;
      feature_image_caption?: string | null;
      featured?: boolean;
      frontmatter?: string | null;
      html?: string | null;
      id?: string;
      meta_description?: string | null;
      meta_title?: string | null;
      og_description?: string | null;
      /** Format: uri-reference */
      og_image?: string | null;
      og_title?: string | null;
      plaintext?: string;
      primary_author?: unknown;
      primary_tag?: unknown;
      /** Format: date-time */
      published_at?: string | null;
      reading_time?: number;
      slug?: string;
      tags?: components["schemas"]["tags"][];
      title?: string;
      twitter_description?: string | null;
      /** Format: uri-reference */
      twitter_image?: string | null;
      twitter_title?: string | null;
      /** Format: date-time */
      updated_at?: string | null;
      /** Format: uri */
      url?: string;
      /** Format: uuid */
      uuid?: string;
      visibility?: string | null;
      tiers?: components["schemas"]["tiers"][];
    };
    /** Settings */
    settings: {
      accent_color?: string | null;
      allow_self_signup?: boolean;
      codeinjection_foot?: string | null;
      codeinjection_head?: string | null;
      comments_enabled?: string;
      /** Format: uri */
      cover_image?: string | null;
      description?: string | null;
      facebook?: string | null;
      firstpromoter_account?: string | null;
      icon?: string | null;
      lang?: string;
      locale?: string;
      logo?: string | null;
      members_enabled?: boolean;
      members_invite_only?: boolean;
      members_support_address?: string;
      meta_description?: string | null;
      meta_title?: string | null;
      navigation?: {
          label?: string;
          url?: string;
        }[];
      og_description?: string | null;
      og_image?: string | null;
      og_title?: string | null;
      paid_members_enabled?: boolean;
      portal_button?: boolean;
      portal_button_icon?: string | null;
      portal_button_signup_text?: string;
      portal_button_style?: string;
      portal_name?: boolean;
      portal_plans?: string[];
      portal_signup_checkbox_required?: boolean;
      portal_signup_terms_html?: string | null;
      recommendations_enabled?: boolean;
      secondary_navigation?: {
          label?: string;
          url?: string;
        }[];
      timezone?: string;
      title?: string;
      twitter?: string | null;
      twitter_description?: string | null;
      twitter_image?: string | null;
      twitter_title?: string | null;
      /** Format: uri */
      url?: string;
      version?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get all authors */
  getGhostApiContentAuthors: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        filter?: string;
        /** @description filter them posts, bois */
        include?: string;
        /** @description filter them posts, bois */
        limit?: string;
        /** @description filter them posts, bois */
        order?: string;
        /** @description filter them posts, bois */
        page?: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            authors?: components["schemas"]["authors"][];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get authors by id */
  getGhostApiContentAuthors1: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            authors?: components["schemas"]["authors"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get authors by slug */
  getGhostApiContentAuthorsSlugJamie: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description slug */
        slug: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            authors?: components["schemas"]["authors"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get all pages */
  getGhostApiContentPages: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        filter?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
        /** @description filter them posts, bois */
        limit?: string;
        /** @description filter them posts, bois */
        order?: string;
        /** @description filter them posts, bois */
        page?: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            pages?: components["schemas"]["pages"][];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get pages by id */
  getGhostApiContentPages65007Ce1B6F82000019271De: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            pages?: components["schemas"]["pages"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get pages by slug */
  getGhostApiContentPagesSlugFavoritePaintings: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description slug */
        slug: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            pages?: components["schemas"]["pages"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get all posts */
  getGhostApiContentPosts: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        filter?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
        /** @description filter them posts, bois */
        limit?: string;
        /** @description filter them posts, bois */
        order?: string;
        /** @description filter them posts, bois */
        page?: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            posts?: components["schemas"]["posts"][];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get posts by id */
  getGhostApiContentPosts65007Dbeb6F82000019271Fa: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            posts?: components["schemas"]["posts"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get posts by slug */
  getGhostApiContentPostsSlugLock: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        formats?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description slug */
        slug: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            posts?: components["schemas"]["posts"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get all settings */
  getGhostApiContentSettings: {
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            settings?: components["schemas"]["settings"];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get all tags */
  getGhostApiContentTags: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        filter?: string;
        /** @description filter them posts, bois */
        include?: string;
        /** @description filter them posts, bois */
        limit?: string;
        /** @description filter them posts, bois */
        order?: string;
        /** @description filter them posts, bois */
        page?: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            tags?: components["schemas"]["tags"][];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get tags by id */
  getGhostApiContentTags65007F03B6F8200001927220: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            tags?: components["schemas"]["tags"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get tags by slug */
  getGhostApiContentTagsSlugPainting: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        include?: string;
      };
      path: {
        /** @description slug */
        slug: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            tags?: components["schemas"]["tags"][];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
  /** Get all tiers */
  getGhostApiContentTiers: {
    parameters: {
      query?: {
        /** @description Select fields to return */
        fields?: string;
        /** @description filter them posts, bois */
        filter?: string;
        /** @description filter them posts, bois */
        include?: string;
        /** @description filter them posts, bois */
        limit?: string;
        /** @description filter them posts, bois */
        order?: string;
        /** @description filter them posts, bois */
        page?: string;
      };
    };
    responses: {
      200: {
        headers: {
          /** @description Custom header fastly-sec-ratelimit */
          "fastly-sec-ratelimit"?: string;
          /** @description Custom header fastly-sec-ratelimit-10s */
          "fastly-sec-ratelimit-10s"?: string;
          /** @description Custom header fastly-sec-ratelimit-1s */
          "fastly-sec-ratelimit-1s"?: string;
          /** @description Custom header fastly-sec-ratelimit-60s */
          "fastly-sec-ratelimit-60s"?: string;
          /** @description Custom header ghost-age */
          "ghost-age"?: string;
          /** @description Custom header ghost-cache */
          "ghost-cache"?: string;
          /** @description Custom header ghost-fastly */
          "ghost-fastly"?: string;
          /** @description Custom header status */
          status?: string;
          /** @description Custom header x-cache */
          "x-cache"?: string;
          /** @description Custom header x-cache-hits */
          "x-cache-hits"?: string;
          /** @description Custom header x-served-by */
          "x-served-by"?: string;
          /** @description Custom header x-timer */
          "x-timer"?: string;
        };
        content: {
          "application/json": {
            tiers?: components["schemas"]["tiers"][];
            meta?: components["schemas"]["meta"];
          };
        };
      };
      403: {
        content: {
          "application/json": components["schemas"]["403"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["404"];
        };
      };
      422: {
        content: {
          "application/json": components["schemas"]["422"];
        };
      };
    };
  };
}
