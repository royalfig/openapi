{
  "get": {
    "description": "",
    "operationId": "getGhostApiContentAuthors1",
    "parameters": [
      {
        "description": "Select fields to return",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string",
          "example": "id,title,slug"
        }
      },
      {
        "description": "id",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "..."
        }
      },
      {
        "description": "filter them posts, bois",
        "in": "query",
        "name": "include",
        "schema": {
          "example": "count.posts",
          "type": "string"
        }
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "example": {
              "authors": [
                {
                  "bio": null,
                  "count": {
                    "posts": 10
                  },
                  "cover_image": null,
                  "facebook": null,
                  "id": "1",
                  "location": null,
                  "meta_description": null,
                  "meta_title": null,
                  "name": "Jamie Larson",
                  "profile_image": null,
                  "slug": "jamie",
                  "twitter": null,
                  "url": "https://openapi.ghost.io/author/jamie/",
                  "website": null
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "authors": {
                  "type": "array",
                  "items": {
                    "$ref": "../components/schemas/authors.json"
                  }
                },
                "meta": {
                  "$ref": "../components/schemas/meta.json"
                }
              }
            }
          }
        },
        "description": "",
        "headers": {
          "ghost-age": {
            "description": "Custom header ghost-age",
            "schema": {
              "type": "string"
            }
          },
          "ghost-cache": {
            "description": "Custom header ghost-cache",
            "schema": {
              "type": "string"
            }
          },
          "ghost-fastly": {
            "description": "Custom header ghost-fastly",
            "schema": {
              "type": "string"
            }
          },
          "status": {
            "description": "Custom header status",
            "schema": {
              "type": "string"
            }
          },
          "x-cache": {
            "description": "Custom header x-cache",
            "schema": {
              "type": "string"
            }
          },
          "x-cache-hits": {
            "description": "Custom header x-cache-hits",
            "schema": {
              "type": "string"
            }
          },
          "x-served-by": {
            "description": "Custom header x-served-by",
            "schema": {
              "type": "string"
            }
          },
          "x-timer": {
            "description": "Custom header x-timer",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": "Unable to determine the authenticated member or integration. Check the supplied Content API Key and ensure cookies are being passed through if member auth is failing.",
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "64664270-5326-11ee-bd20-3d97eb5313ad",
                  "message": "Authorization failed",
                  "property": null,
                  "type": "NoPermissionError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/403.json"
            }
          }
        },
        "description": ""
      },
      "404": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": null,
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "6469c4e0-5326-11ee-bd20-3d97eb5313ad",
                  "message": "Resource not found",
                  "property": null,
                  "type": "NotFoundError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/404.json"
            }
          }
        },
        "description": ""
      },
      "422": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": "Validation (matches) failed for limit undefined.limit",
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "647fbde0-5326-11ee-bd20-3d97eb5313ad",
                  "message": "Validation error, cannot list posts.",
                  "property": null,
                  "type": "ValidationError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/422.json"
            }
          }
        },
        "description": ""
      }
    },
    "summary": "Get authors by id",
    "tags": [
      "authors"
    ]
  },
  "parameters": []
}