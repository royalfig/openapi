{
  "get": {
    "description": "",
    "operationId": "getGhostApiContentTags65007F03B6F8200001927220",
    "parameters": [
      {
        "description": "Select fields to return",
        "in": "query",
        "name": "field",
        "schema": {
          "type": "string",
          "example": "fields=id,title,slug"
        }
      },
      {
        "description": "id",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "..."
        }
      },
      {
        "description": "filter them posts, bois",
        "in": "query",
        "name": "include",
        "schema": {
          "example": "count.posts",
          "type": "string"
        }
      },
      {
        "description": "filter them posts, bois",
        "in": "query",
        "name": "key",
        "schema": {
          "example": "741f226e140b5051ed3edd4f6a",
          "type": "string"
        },
        "required": true
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "example": {
              "tags": [
                {
                  "accent_color": null,
                  "canonical_url": null,
                  "codeinjection_foot": null,
                  "codeinjection_head": null,
                  "count": {
                    "posts": 8
                  },
                  "description": null,
                  "feature_image": null,
                  "id": "65007f03b6f8200001927220",
                  "meta_description": null,
                  "meta_title": null,
                  "name": "Painting",
                  "og_description": null,
                  "og_image": null,
                  "og_title": null,
                  "slug": "painting",
                  "twitter_description": null,
                  "twitter_image": null,
                  "twitter_title": null,
                  "url": "https://openapi.ghost.io/tag/painting/",
                  "visibility": "public"
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "$ref": "../components/schemas/tags.json"
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "$ref": "../components/schemas/meta.json"
                  }
                }
              }
            }
          }
        },
        "description": "",
        "headers": {
          "ghost-age": {
            "description": "Custom header ghost-age",
            "schema": {
              "type": "string"
            }
          },
          "ghost-cache": {
            "description": "Custom header ghost-cache",
            "schema": {
              "type": "string"
            }
          },
          "ghost-fastly": {
            "description": "Custom header ghost-fastly",
            "schema": {
              "type": "string"
            }
          },
          "status": {
            "description": "Custom header status",
            "schema": {
              "type": "string"
            }
          },
          "x-cache": {
            "description": "Custom header x-cache",
            "schema": {
              "type": "string"
            }
          },
          "x-cache-hits": {
            "description": "Custom header x-cache-hits",
            "schema": {
              "type": "string"
            }
          },
          "x-served-by": {
            "description": "Custom header x-served-by",
            "schema": {
              "type": "string"
            }
          },
          "x-timer": {
            "description": "Custom header x-timer",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": "Unable to determine the authenticated member or integration. Check the supplied Content API Key and ensure cookies are being passed through if member auth is failing.",
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "d0bde160-526a-11ee-a4d9-39c9d51d534b",
                  "message": "Authorization failed",
                  "property": null,
                  "type": "NoPermissionError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/403.json"
            }
          }
        }
      },
      "404": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": null,
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "bdc87d10-526d-11ee-a4d9-39c9d51d534b",
                  "message": "Resource not found",
                  "property": null,
                  "type": "NotFoundError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/404.json"
            }
          }
        }
      },
      "422": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "code": null,
                  "context": "Validation (matches) failed for limit undefined.limit",
                  "details": null,
                  "ghostErrorCode": null,
                  "help": null,
                  "id": "4c23e990-5274-11ee-a4d9-39c9d51d534b",
                  "message": "Validation error, cannot list posts.",
                  "property": null,
                  "type": "ValidationError"
                }
              ]
            },
            "schema": {
              "$ref": "../components/schemas/422.json"
            }
          }
        }
      }
    },
    "summary": "Get tags by id",
    "tags": [
      "tags"
    ]
  },
  "parameters": []
}